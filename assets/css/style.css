/*
What is CSS?
- Cascade Style Sheet
- Language to create the presentation and visuals
*/
/*-------------------------------------------------------------------*/
/*
CSS syntax and deceleration:
Selector {
    Property: Value;
    Property: Value;
}

Selector => Class or ID or Element tag(p, div, a,.....)

Example:
p {
    color: red;
    font-size: 40px;
}

*/

/*
If you want to target all the p Elements inside the html page: by using element tag with targeting
p {

}

If you want to target specific P element inside the html page: by using the class name 
.special {
    color: blue;
}


If you want to target by ID:
#special {
    color: red;
}

*/
/*-------------------------------------------------------------------*//*-------------------------------------------------------------------*/
/*
Three way to call CSS code:

Internal Style:
Using style tag inside html page
<style>
</style>

Inline style:
within the tag inside the html page
<p style="color: blue"> My Paragraph blue </p>

External Style:
using external file style
same our example this file style.css

Important notes:
please be note that the most power style between these three is the inline style 

it's not prefer to use inline style because the html files were template and already finished compilation and build
so it's better to use css file is already available inside the server can edit without any issues.

*/
/*-------------------------------------------------------------------*//*-------------------------------------------------------------------*/
/*
Name Convention:
In CSS the best practice to name the classes:
Kebab case:
Example
.user-text {
    color: red;
}
*/
/*-------------------------------------------------------------------*//*-------------------------------------------------------------------*/
/* Background Property */

div {
    background-color: red; /* Color Name*/
    background-color: green; /* Color Name*/
    background-color: blue; /* Color Name*/
    background-color: white; /* Color Name*/

    background-color: rgb(255, 0, 0); /* Red Green Blue => result red*/
    background-color: rgb(0, 255, 0); /* Red Green Blue => result green*/
    background-color: rgb(0, 0, 255); /* Red Green Blue => result blue*/
    background-color: rgb(0, 0, 0); /* Red Green Blue => result black*/
    background-color: rgb(255, 255, 255); /* Red Green Blue => result white*/
    background-color: rgb(0 0 0 / 50%); /*Red Green Blue (a)Alpha Channel (الشفافية)*/

    background-color: #FF0000;  /* RR GG BB => the values between 00 to FF in Hexadecimal*/
    background-color: #00FF00;  /* RR GG BB => the values between 00 to FF in Hexadecimal*/
    background-color: #0000FF;  /* RR GG BB => the values between 00 to FF in Hexadecimal*/
    background-color: #FFFFFF;  /* RR GG BB => the values between 00 to FF in Hexadecimal*/
    background-color: #000000;  /* RR GG BB => the values between 00 to FF in Hexadecimal*/

    background-image: url("../readme-images/css3html5.jpeg");

    background-repeat: repeat; /* Default value for this property is Repeat => it will repeat the photo all over the page (Element size)*/
    background-repeat: no-repeat; /* It will stop the photo repeat */
    background-repeat: repeat-x; /* it will repeat x line */
    background-repeat: repeat-y; /* it will repeat y line */

    background-attachment: scroll; /*default value for this property is scroll (the photo stay in one place and not move)*/
    background-attachment: fixed; /*fixed value make the photo fixed and move when you go down(scrolling down it's stuck on screen) */

    /* Move the background photo*/
    background-position: left top; /* position x , position y  with this property move the photo place*/
    background-position: left center; /* position x , position y  with this property move the photo place*/
    background-position: left bottom; /* position x , position y  with this property move the photo place*/
    background-position: right bottom; /* position x , position y  with this property move the photo place*/
    background-position: center top; /* position x , position y  with this property move the photo place*/
    background-position: center center; /* position x , position y  with this property move the photo place*/
    /*Move the background photo with pixels and %*/
    background-position: 100px 200px; /* left , top */
    background-position: 30% 50%; /* left x , top  */


    /* You can control the size of photo to fill the content*/
    background-size: auto; /* Default value it's appear the photo with its normal size on the page */
    background-size: cover; /* it fill the content all (maybe photo stretch or cut from the photo(Part from it)) Important */
    background-size: contain; /* Make resize for the photo to make the full photo appear not part of it on the page Important */
    background-size: 300px 200px; /* width=300px, height= 200px */
    background-size: 40% 50%; /* width=40%, height= 50% */


    /*Short hand for background property*/
    /*background: ; */


    /*-------------------------------------------------------------------*/

    /* Padding property => inside the element*/
    /*
    please be note that the padding will effect the original width so it will increase it as example
    if the width 300 and we add padding 10px from the left and right so the total width will be 320px
    */
    padding: 10px;  /* in all the ways (top, right, bottom, left)*/

    padding: 10px 20px;  /* Here the result is (top: 10px, right: 20px, bottom: 10px, right: 20px)*/

    padding: 10px 20px 15px; /*Here the result is (top: 10px, right: 20px, bottom: 15px, left: 20px)*/

    padding-top: 10px;
    padding-right: 20px;
    padding-bottom: 30px;
    padding-left: 40px;

    /* Very Important note: please the Padding don't accept Negative value at all */
    /* Also Note the padding accept % as a value*/

    /*-------------------------------------------------------------------*/

    /* Margin Property => out side the element */

    /* Very Important note: the Margin accept Negative Value */
    /* also the margin accept % asa value*/
    margin: 10px; /* in all the ways (top, right, bottom, left) */


    /*
    if we have a scinario that we want an element take 70% from the size of the conatiner father
    and we want to center it inside this container

    div {
        width: 70%;
        margin-left: 15%;
    }

    if we change the width of the element it will damage because of we specifiy the exact value 15%


    but the best practice to make as per below:
    div {
        width: 70%;
        margin-left: auto;
        margin-right: auto;
    }

    the auto value mean in both(left-right) take the rest amount of with 30% equality between left and right so it will be daynamic
    if in future change the width so it will not effect the margin and it will be in the center too.
    (the browser will control and take the rest amount of width equality between both)
    */

    /*-------------------------------------------------------------------*/

    /* Border property of the element => (size , color, style)*/
    /*
    please be note that the border will effect the original width so it will increase it as example
    if the width 300 and we add element border 10px from the left and right so the total width will be 320px
    */
    /* in css3 the box-sizing will make the border not take from the width of the element */
    border-width: 10px; /* Top:10px, right:10px, bottom:10px, left:10px */
    border-color: red; /* top: red, right: red, bottom: red, left: red */
    border-color: red green; /* top: red, right: green, bottom: red, left: green */
    border-style: solid dashed; /* top: solid, right: dashed, bottom: solid, left: dashed */
    /* solid...dashed..dotted...double....groove  most useful values are: solid and dashed only */


    border: 10px solid red; /* Short hand code for border */


    /* Outline */
    /* 
    please be note that the outline will not effect on width the outline it's not same of border or the padding
    it will not effect the width
    you cannot control each side or way same the border, you can only set one value
    */
    outline: 10px solid blue;
    outline-style: solid; /* only one value*/
}
    /*-------------------------------------------------------------------*/


/* Display property */
span {
    display: inline-block;
    display: block;
    display: inline;
}
/*
it's responsible how to appear and display the element on your page.

Block: example: div
- If you didn't specify a width, so it will take the full width
- Add line Break before and after it
- Respect the padding, Margin, Width, Height

Inline: example: span
- Don't respect width and height
- Don't add Line break before and after!! , allow the elements come before and after it
- respect the padding and margin only from left and right

Inline-Block:
- allow the elements come before and after it 
- Respect padding, margin, width, height in all the sides
- Don't add new line before and after it
*/

    /*-------------------------------------------------------------------*/

/* Element Visibility and use cases */

/* 
display: none;   it means the element not visible on my page 
the use cases the button see more so when you press on see more it will make the element from display none to visible so you can see

when you make display: none for element it will remove it from the page at all disappear.

visibility: visible;    the default value of this property visible

when you make visibility: hidden; it will keep the place of the element but it will be hidden element you cannot see it on the page

*/

    /*-------------------------------------------------------------------*/

/* Grouping multiple selectors */
/* Example below: */
.one,
.two,
.three,
.four,
p {
    padding: 10px;
    margin: 10px 0;
    background-color: #eee;
}


/* Nesting "Very Important" */
div p {
    color: red;
}

div .special {
    background-color: red;
}

/* Dimensions Width and Height */
/*
width:
min-width: 400px;   this property mean if you want element stretch as the content so you give 400px minimum but it can be stretch if
the content need more.
max-width: 400px;    this property mean the element cannot stretch more than 400px, it stop the stretch 


*******Very Important: if you want to be the size of element exactly the size of the content you can use:
width: fit-content;
the div stay display block and the size will be fit content exactly as the size of the content.*******

height:
height 40 that's mean cannot go further more than 40px
min-height: 40px; that's mean it will start from 40px and can be stretch if the content needs more
max-height: 60px; that's mean it will stopped at 60px and cannot be stretch more than 60px
*/
div {
    display: inline-block;
    min-width: 400px; /* so the element can be stretch */
    max-width: 400px; /* so the element cannot be stretch more than 400px */
    min-height: 40px; /* so the element can be stretch and starts from 40px */
    max-height: 60px; /* so the element cannot be stretch more than 60px */
}


/* Overflow property X and Y */

div {
    overflow: visible; /* the default value of overflow is visible so it can be seen the overflow */
    overflow: hidden; /* the over content will be hidden and not show on the page */
    overflow: scroll; /*  it gives you scroll to see the over content */
    overflow: auto; /* it will auto if the content over and needs scroll so it will show scroll if not it will hide the scroll design*/
    overflow-y: hidden; /*it will hide the over content on y line side only*/
    overflow-x: hidden; /* it will hide the over content on x line side only */
}

/*color, shadow properties (Dealing with text) */
div {
    color: #f9f9f9; /*you can use hexcode for the color property not only the names */
    /*
    Text Shadow:
    syntax
    text-shadow: H-Shadow V-shadow Blur Color
    */
    text-shadow: -4px, 10px, 5px, rgb(255 2 2 / 24%);
}


/* Text Alignment and Direction and Vertical alignment Properties */
/* the default of the web page direction is ltr because it's english.*/

div {
    text-align: center; /* will keep the text in center */
    text-align: right; /* will keep the text in right */
    text-align: left; /* will keep the text in left (default value)*/

    direction: ltr; /* left to right (Page Direction )the default value */
    direction: rtl; /* right to left (Page Direction) for arabic language */

    vertical-align: top; /* if you have photo and you need to align vertically this photo with the text beside */
    vertical-align: bottom; /* if you have photo and you need to align vertically this photo with the text beside */
    vertical-align: middle; /* if you have photo and you need to align vertically this photo with the text beside */
}

/* Text Decoration and Transformation */
div {
    text-decoration: line-through; /* it will make a line through the text */
    text-decoration: underline; /* it will make a underline the text */
    text-decoration: overline; /* it will make a over line the text */
    text-decoration: none;  /* the most use cases if when we use a element and we want to delete the underline of this link */

    text-transform: capitalize; /* the first letter capital */
    text-transform: uppercase; /* all the letters capital */
    text-transform: lowercase; /* all the letters lower case */
}

/* Text Spacing */

div {
    letter-spacing: 2px; /* the space between letters is will accept negative value and positive value*/
    letter-spacing: -10px; /* the space between letters is will accept negative value and positive value*/

    text-indent: 50px; /* the white-empty space before the text (before starting the text) 
    some use cases when you want display programming code on the page, also if you want to set the text out of the page you cannt see it
    text-indent: -999999px;..
    */

    line-height: 1; /* the space between the lines but vertically  1 = 100%  , 1.5 = 150%  2= 200%  the best value 1.6 = 160% */

    word-spacing: 1px; /* the space between all words it will accept negative value and positive values */

    white-space: normal; /* default value: when it reach to the limit of the width the white space property go down to the next line and continue in the next line*/
    white-space: nowrap; /*it will stay in the same line and continue without go to the next line and it reuined the content*/

    word-break: normal; /*default value*/ 
    word-break: break-word; /*it will break the word and contiue in the next line when it reach to max width*/ 
    /*the most use cases if you have a link and there is no space like one word so you want to use word-break property
    to break the link and  continue on a new line without over text go outline the element */
}


/* Text overflow property it's only for text*/

div {
    overflow: hidden; /* this it will hide the content over the element */
    text-overflow: ellipsis; /* this is will show that some of the text cut and hide because of width no place with three points ... */

}

div:hover {
    overflow: visible; /* here we add an hover event that when we hover on the element we can see the full text without and hide from
    it the over content */
}

/* In heritance */
/*if the propety already exist in the son it will not be inherit from the father */
body {
    font-family: Arial, Helvetica, sans-serif; /*can be inherit from the body father*/
}

div {
    text-align: center; /*This property can be inherit from the father */
    padding: 20px; /*cannot be inherit from the father */
    background-color: #eee; /*cannot be inherit from the father */
    font-size: 20px; /*can be inherit from the father if not exist inside the son */
    border: 2px solid red;
}

div p {
    border: 2px solid ;
    border-color: inherit; /*it will be inherit from the div father so it will be red borders*/
    padding: inherit; /*it wil be inherit from the div father so it will be the same padding of div */
}

/* Font Family property */

/*Web safe fonts: examples: Arial verdana Helvetica ...........*/

/*Web fonts from google : https://fonts.google.com/*/

div {
    font-family: Arial, Helvetica, sans-serif;
}

/*Font size and css units */
/*

px

em  => Time
default font size for webpage is 16px 
the em it's time for the font size that inherit so it's a time from the inherit font
example:
div {
    font-size = 40px;
}

div p {
    font-size = 2em;  => here is means that the 2em = 80px 
}

rem => Root time (Root element = HTML element)


percentage => font-size: 100%; it means that the font-size same 100% exact the father if you wrote 150% it means that 1.5 time 
exact that if you have the fater 20px and the son 150% so the exact result is 30px 



vw => view port width:    it's very useful because it will change the size of the font daynamic way.
if we have the width of the port/webpage or window = 900px
div {
    font-size: 5vw; => it means that 5 x 9 = 45px
}


vh => view port height also read about it to know the information
vmin => same the rest just read to know the information
*/


/* Font style, Font Variant, Font Weight */

div {
    font-style: italic; /*it will change the style of the word like make it a little bit style italic and oblique */
    font-variant: small-caps; /*it will change the letters to capital letters but smaller than the normal font */
    font-weight: bold; /* it will make the font bold */
    font-weight: 300; /* it will make the font weight it depends on the font style that you generate from google fonts */
    font-weight: normal; /*it will reset to normal (Without bold)*/
}

/*-------------------------------------------------------------------*/

/* Mouse Cursor */

span {
    cursor: pointer; /*Here it changed the cursor design to a click hand that shows it's a button */
    cursor: grab; /*Grab that you want to grab things or take things */
    cursor: move;
}


/*-------------------------------------------------------------------*/

/* Float and Clear properties */
/*It is the old property to organise the elements on the layout and webpage */


.parent {
    background-color: red;
    padding: 10px;
    /*overflow: hidden; /*it needs always in parent with using float inside the children + set a height for the parent  (Don'T USE IT
    IT'S VERY BAD WE ONLY SHOW THAT'S A VERY BAD WAY TO FIND A SOLUTION FOR THE FLOAT OVERFLOW NOT A SOLUTION AT ALL )*/ 
}

.parent div {
padding-top: 10px;
padding-bottom: 10px;
text-align: center;
background-color: #eee;
/*display: inline-block; it will not work with float property and don't use it to organise the element on the layout very bad way*/
width: 25%; /*we choose 25% because the number of divs inside the parent are 4 divs so the width equal to 100% / 4 = 25% */
float: left; /* the organise of elements will start from left to right */
float: right; /* the organise of elements will start from right to left */
}


/*we add a new element inside html page inside the parent and last child inside it  we set the value of its class property
to clear value to set the propety clear to this element so this element has now clear property */
.clear {  /*Here we set clear class inside it clear property */
    clear: both; 
}

/* Calc Property Important to organise with float property very useful */
body {
    margin: 0;
}

div {  /*in this example: we have 4 divs here*/
    padding-top: 10px;
    padding-bottom: 10px;
    text-align: center;
    background-color: #eee;
    width: 23.75%; 
    float: left; 
    margin-left: 1%;
    }

/*
Content Width is : 100%
i want 5 spaces   | element | element | element | element |     here we see the | as a space so the total is 5 spaces 
5 spaces => 1% * 5 = 5% from the content width
100% - 5% = 95%
4 elements the width is : 95% / 4 = 23.75%

*/


/*another example: */

body {
    margin: 0;
}

div {  /*in this example: we have 4 divs here*/
    padding-top: 10px;
    padding-bottom: 10px;
    text-align: center;
    background-color: #eee;
    width: 17.6%; 
    float: left; 
    margin-left: 2%;
    }

/*
Content Width is : 100%
i want 6 spaces   | element | element | element | element | element |    here we see the | as a space so the total is 6 spaces 
6 spaces => 2% * 6 = 12% from the content width
100% - 12% = 88%
5 elements the width is : 88% / 5 = 17.6%



/*another example: BUT WITH USING THE CALC important*/

body {
    margin: 0;
}

div {  /*in this example: we have 4 divs here*/
    padding-top: 10px;
    padding-bottom: 10px;
    text-align: center;
    background-color: #eee;
    width: calc(88% / 5); 
    float: left; 
    margin-left: 2%;
    }

/*
Content Width is : 100%
i want 6 spaces   | element | element | element | element | element |    here we see the | as a space so the total is 6 spaces 
6 spaces => 2% * 6 = 12% from the content width
100% - 12% = 88%
5 elements the width is : 88% / 5 = 17.6%


/* you can use calc with all properties*/




/*another example: BUT WITH USING THE CALC important*/

body {
    margin: 0;
}

div {  /*in this example: we have 4 divs here*/
    padding-top: 10px;
    padding-bottom: 10px;
    text-align: center;
    background-color: #eee;
    width: calc(100% - 90px) / 5; 
    float: left; 
    margin-left: 15px; /*Here we change to px not % Important*/
    }

/*
Content Width is : 100%
i want 6 spaces   | element | element | element | element | element |    here we see the | as a space so the total is 6 spaces 
6 spaces => 15px * 6 = 90px from the content width
100% - 90px 
5 elements the width is : (100% - 90px) / 5 

/*-------------------------------------------------------------------*/

/*Opacity*/

.one {
    background-color: rgb(255 0 0 / 0.1); /* here is the alpha channel*/

}
.two {  /*the ddifferent between opacity and alpha channel the opacity control the full element not only the backgrond same .one 0.1*/
    opacity: 1; /*the element appear 100%*/
    opacity: 0.7; /*the element appear 70%*/
    opacity: 0.563; /*the element appear 56%*/
}


/*-------------------------------------------------------------------*/

/* position property */

/*
- static => default value  (left right top bottom) not effect on it if you set the position as static 
- relative => move as relative بناء على نفسه لا يؤثر على المحتوى اللي جنبه
- absolute => if you set absolute it's out of the work flow and maybe will go over the other element because it's out of the work flow
the absolute move throught property left: 20px this will move the element from left بناء على الصفحة 
- fixed  => move بناء على الصفحة بغض النظر عن المكان و ينزل معك بس تعمل سكرول
- sticky => position: sticky;   and   top: 10px;   when will reach to top 10px so the element will stick with you as nav bar will
stick with you when you scroll down and use the nav bar easy way
*/

/*
Important:
if you want to make element move inside a parent element you must set position property for the parent as relative and the son 
you must set it as absolute and move the element as you like by left buttom top right as you like.
*/

/*-------------------------------------------------------------------*/


/*Z-index*/ /* the big number is over the small number
please be note the z-index will not work without position property */
/*
z-index: 3; over element 1 and 2
z-index: 9999; over all elements
z-index: 2; only over element 1
z-index: 1; it's the lowest and down element 

اذا بدك تعمل عنصر ورا كل العناصر بتحط قيمة البروبرتي -1

*/

/*-------------------------------------------------------------------*/

/*Lists styling*/

ul {
    list-style-type: lower-latin;  /* to make the count and style type for the unordered list */
    list-style-position: outside; /* default is outside it will be out side so the bullets and style out side the li */
    list-style-image: url(""); /*if you want to put image instead of the default bullets */
    list-style: none; /*important */
    padding-left: 0;
    margin: 0;
}


/*-------------------------------------------------------------------*/

/* Table styling */

table {
    width: 100%;
    border-spacing: 0px; /*the space between the table elements*/
    


}

table td {
    padding: 15px;
    background-color: #eee;
    border: 1px solid #ccc;

}

table thead td {
    background-color: red;
    color: white;
    font-weight: bold;
    text-align: center;
    border-color: #aa0000;
}

/*-------------------------------------------------------------------*/

/*Pseudo classes*/
/* Example: */

a{
    color: green;
    text-decoration: none;
}

a:hover {
    color: red;
}

.ch:checked + label {           /* ch it's an input checkbox */
    color: red;
}                  

a:visited {
    color: blue;
}

div:empty {             /*Div empty not childs inside */
    border: 10px solid red;
}



in:focus {  /* input text*/
    border-color: blue;
    outline: none;
}


/*-------------------------------------------------------------------*/

/*Pseudo elements*/

/* below we put the first letter inside span then we control it and put style for it*/
.one span {
    display: inline-block;
    background-color: red;
    color: white;
    font-size: 60px;
    font-weight: bold;
}


/* below we didn't access to the html code to put the first letter in span, here we used pseudo element to make same exactly same above*/
.two::first-letter {
    display: inline-block;
    background-color: red;
    color: white;
    font-size: 60px;
    font-weight: bold;
}



.three::first-line {  /*it's here pseudo element, the first line inside the paragraph*/
    font-weight: bold;
    color: green;
}



::selection {   /*for all website content if you select context inside the webpage default color is blue for the selection here want*/
    background-color: black;                    /*  to change the color when you select the context inside the webpage*/
    color: yellow;
}


/*--*/
/* Pseudo element (before and after) content */

.parent {    /*Counter to count with using the content*/
    margin-bottom: 20px;
    overflow: hidden;
    counter-increment: members-counter;  /*Here you can put the value as you like for the property counte-increamt it's only the name*/
}

.one {   /*one it's a div*/
    position: relative;
}

/*.one::after {
    content: "";
    position: absolute;
    width: 5px;
    height: 100px;
    right: -10px;
    top: 0;
    background-color: #009687;
}*/

.one::after {   /*Here we put a counter to count the divs automatic al put the number beside the content*/
    content: counter(members-counter);
    position: absolute;
    background-color: red;
    color: white;
    width: 20px;
    height: 20px;
    text-align: center;
    font-weight: bold;
    right: -10px;
    top: 50%;
    margin-top: -10px;
}

/*.one::before {
    content: "";
    width: 0;
    height: 0;
    position: absolute;
    left: -20px;
    top: 50%;
    margin-top: -10px;
    border-width: 10px;
    border-style: solid;
    border-color: transparent #009687 transparent transparent;
}*/

.one::before {  /*Here you can add the value of any attribute inside the html page so you can add it here and add style to it*/
    content: attr(data-text);  /*here we have attrbiute in html element page ------> data-text = "Something" */
    display: none;
}

.one:hover::before {
    display: block;
}

/*
you can also add a value for the content property url add photo voice file,,,,it's not useful at all !!!!!!
content: url();
*/



/*another example for pseudo element with ul*/
ul {
    list-style: none;
}
ul li {
    position: relative;
    padding-left: 10px;
    margin-bottom: 10px;
}
ul li::before {
    content: "";
    width: 0;
    height: 0;
    position: absolute;
    left: -20px;
    top: 50%;
    margin-top: -10px;
    border-width: 10px;
    border-style: solid;
    border-color: transparent #009687 transparent transparent;
}


/*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*/

/* Vendors Prefixes the browsers developers(Chrome - Safari - Firefox - IE,Edge - Opera) */

/*

- New css feauter appeared.
- Browsers tests the feauter in version x.
- Browsers add prefix to give developers the ability to use it.
- The feauter is fully supported in version y, no need for prefix.



-webkit => chrom-safari-new opera version
-moz => firefox
-ms => IE- Edge
-o => old version from Opera
*/

.class {
    -webkit-border-radius: 10px;
    -moz-border-radius: 10px;
    -o-border-radius: 10px;
    -ms-border-radius: 10px;
    border-radius: 10px;
}

/* 
to check the feauter if it wants to add the vendros for it check the website below:
    caniuse.com
*/

/*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*/

/*Border radius property*/

div {
    width: 150px;
    height: 150px;
    background-color: red;
    margin: 20px auto;
    /*border-radius: 50%; /* it needs the 4 values for 4 sides (top, right, bottom, left) and the default value is 0 for all sides*/
    /*border-radius: 10px; /* it needs the 4 values for 4 sides (top, right, bottom, left) and the default value is 0 for all sides*/

    /*border-top-left-radius: 20px 10px;     here it needs two values or you can write one because control the two side of the peak */  
    /*border-bottom-right-radius: 20px 5px;  here it needs two values or you can write one because control the two side of the peak */

}

/*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*/


/* Box Shadows and examples */
/* box shadow make shadow for the element it self not only the ext same property text shadow*/
/*
box-shadow: h-shadow | v-shadow | blue | spread(مساحة انتشار الشادو) | color | inset
*/

div {
    padding: 20px;
    background-color: #eee;
    margin: 20px auto;
    width: 300px;
    box-shadow: 0 0 0 0 #ddd inset; 
    box-shadow: 10px 8px 5px 20px rgb(0 0 0 / 5%), 10px 8px 5px 20px #00f, 10px 8px 5px 20px red; 
}

/*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*/

/* Box model and box sizing */

* {
    box-sizing: content-box; /*the default value of box-sizing it means that any additional border or padding will increase the width and height*/
    box-sizing: border-box; /* the width and hieght will include the border and padding without adding more one height and width */
}

/*to respect the width and height you must put values for both then the border-box will respect these two for each element*/



/*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*/



/* Transition IMPORTANT : to control the element when its changing from status to status moving, color changing, size changing.,....*/

/*
Transition:
Duration
Property
Delay
Timing Function
*/

* {
    box-sizing: border-box;
}

.one {
    background-color: #eee;
    width: 200px;
    height: 100px;

    transition-duration: 3s;   /*needs the time by s = 1 or ms = 1000*/
    transition-delay: 2s;        /*default value is 0, it needs the time by s = 1 or ms = 1000*/

    transition-property: all;  /*All default value it means on all the property*/
    transition-property: margin-left, margin-top;  /* here we choose on which properties want to effect the transition process */

    transition-timing-function: ease; /*ease is the default value it control the transition timing curve (slow fast slow)*/
    transition-timing-function: linear; /*ease is the default value it control the transition timing curve (same speed to end)*/
    transition-timing-function: ease-in; /*ease is the default value it control the transition timing curve (slow normal)*/
    transition-timing-function: ease-out; /*ease is the default value it control the transition timing curve (normal slow)*/
    transition-timing-function: ease-in-out; /*ease is the default value it control the transition timing curve (slow normal slow)*/

    /*Short hand for all above */
    transition: width 2s, heigh 1s; /*Property , Duration*/
    transition: all .5s 2s linear; /*Property , Duration, Delay, Timing Function*/
}

.one:hover {  /*because of all for transition property so it will effect on all the properties below*/
    margin-left: 20px;    
    margin-top: 20px;
    width: 280px;
}

/*Check the link for: developer.mozilla.org/en-US/docs/web/CSS/CSS-animated-properties */


/*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*/

/* Important Declaration and flag  !*/

.one {
    background-color: red !important;
}

/* the margin collapse */
/*
## only the vertical margin collapse
## Bigger margin win and set between the two elements
## the collapse happend between two elements if no other element between them
## Nesting Will not prevent the collapsing
*/



/* CSS Variables */

/*
Global scope Variable
Local scope Variable

Always put the variables inside the root

when you want to use the variable inside property you must use function name var(Variable name, Fallback Value)
*/

:root {
    --mainColor: blue;
    --mainPadding: 10px;

}

.main {
    background-color: var(--mainColor, black);
    padding: var(--mainPadding);
}

h2 {
    background-color: var(--mainColor, black);
    padding: var(--mainPadding);
}

h3 {
    padding: calc(20px + var(--mainPadding));
}

.local {
    --mainColor: black;   /*Local scope Variable*/
    background-color: var(--mainColor);
}

/*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*//*----*/
